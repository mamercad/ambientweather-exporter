name: testing

on:
  pull_request:
  push:
    branches: [main]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: false

jobs:

  pre-commit:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
      - uses: pre-commit/action@v2.0.3
      # - uses: sarisia/actions-status-discord@v1
      #   if: always()
      #   with:
      #     webhook: ${{ secrets.DISCORD_WEBHOOK_GITHUB }}

  # ansible-ping:
  #   runs-on: self-hosted
  #   steps:
  #     - name: ansible-playbook/ping
  #       uses: arillso/action.playbook@master
  #       with:
  #         playbook: ansible/ping.yml
  #         inventory: ansible/inventory.yml
  #         limit: ubuntu
  #         user: github
  #         private_key: ${{ secrets.GH_SSH_KEY }}
  #         verbose: 1
  #       env:
  #         ANSIBLE_DEPRECATION_WARNINGS: true
  #         ANSIBLE_FORCE_COLOR: true
  #         ANSIBLE_HOST_KEY_CHECKING: false
  #     - uses: sarisia/actions-status-discord@v1
  #       if: always()
  #       with:
  #         webhook: ${{ secrets.DISCORD_WEBHOOK_GITHUB }}

  # ansible-site:
  #   runs-on: self-hosted
  #   strategy:
  #     max-parallel: 1
  #     matrix:
  #       tag:
  #         - ubuntu
  #         - netdata
  #         - nginx
  #         - postfix
  #         - powerdns
  #         - traefik
  #         - octodns
  #         - github
  #         - thelounge
  #         - k3s
  #         - healthchecksio
  #         - concourse
  #         - awx
  #         - prometheus
  #         - unpoller
  #         - wyze
  #         - tests
  #   steps:
  #     - name: checkout code
  #       uses: actions/checkout@v2

  #     - name: setup python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: 3.9

  #     - name: install dependencies
  #       run: |
  #         python -m pip install --upgrade pip
  #         pip install -r ansible/requirements.txt

  #     - name: ansible/${{ matrix.tag }}
  #       env:
  #         private_key: ${{ secrets.GH_SSH_KEY }}
  #         ANSIBLE_DEPRECATION_WARNINGS: true
  #         ANSIBLE_FORCE_COLOR: true
  #         ANSIBLE_HOST_KEY_CHECKING: false
  #         CLOUDFLARE_API_KEY: ${{ secrets.CLOUDFLARE_API_KEY }}
  #         GMAIL_SASL_PASSWORD: ${{ secrets.GMAIL_SASL_PASSWORD }}
  #         K3S_TOKEN: ${{ secrets.K3S_TOKEN }}
  #         HEALTHCHECKSIO_API_KEY: ${{ secrets.HEALTHCHECKSIO_API_KEY }}
  #         POWERDNS_API_KEY: ${{ secrets.POWERDNS_API_KEY }}
  #         TRAEFIK_ADMIN_USERNAME: ${{ secrets.TRAEFIK_ADMIN_USERNAME }}
  #         TRAEFIK_ADMIN_PASSWORD: ${{ secrets.TRAEFIK_ADMIN_PASSWORD }}
  #         TRAEFIK_CLOUDFLARE_EMAIL: ${{ secrets.TRAEFIK_CLOUDFLARE_EMAIL }}
  #         TRAEFIK_CLOUDFLARE_API_KEY: ${{ secrets.TRAEFIK_CLOUDFLARE_API_KEY }}
  #       run: |
  #         mkdir .ssh
  #         chmod 700 .ssh
  #         echo "${private_key}" > .ssh/id_rsa
  #         chmod 400 .ssh/id_rsa
  #         eval $(ssh-agent)
  #         ssh-add .ssh/id_rsa
  #         ssh-add -l
  #         cd ansible
  #         ansible-galaxy \
  #           collection install \
  #           --requirements-file requirements.yml
  #         ansible-playbook \
  #           --inventory inventory.yml \
  #           --extra-vars ansible_user=github \
  #           --verbose \
  #           --tags ${{ matrix.tag }} \
  #           site.yml

  #     - name: notify discord
  #       uses: sarisia/actions-status-discord@v1
  #       if: always()
  #       with:
  #         webhook: ${{ secrets.DISCORD_WEBHOOK_GITHUB }}
